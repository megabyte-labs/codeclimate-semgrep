{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "content": {
      "$id": "#/definitions/content",
      "description": "More information about the issue's check, including a description of the issue, how to fix it, and relevant links",
      "properties": {
        "body": {
          "description": "A Markdown document",
          "type": "string"
        }
      },
      "required": ["body"],
      "type": "object"
    },
    "location": {
      "$id": "#/definitions/location",
      "description": "A range of a source code file",
      "oneOf": [
        {
          "required": ["lines"]
        },
        {
          "required": ["positions"]
        }
      ],
      "properties": {
        "lines": {
          "properties": {
            "begin": {
              "type": "integer"
            },
            "end": {
              "type": "integer"
            }
          },
          "required": ["begin", "end"],
          "type": "object"
        },
        "path": {
          "description": "The file path relative to /code",
          "type": "string"
        },
        "positions": {
          "properties": {
            "begin": { "$ref": "#/definitions/position" },
            "end": { "$ref": "#/definitions/position" }
          },
          "required": ["begin", "end"],
          "type": "object"
        }
      },
      "required": ["path"],
      "type": "object"
    },
    "position": {
      "$id": "#/definitions/position",
      "properties": {
        "column": {
          "type": "integer"
        },
        "line": {
          "type": "integer"
        }
      },
      "required": ["line", "column"],
      "type": "object"
    },
    "trace": {
      "$id": "#/definitions/trace",
      "description": "A data structure meant to represent ordered or unordered lists of source code locations",
      "properties": {
        "locations": {
          "items": { "$ref": "#/definitions/location" },
          "type": "array"
        },
        "stacktrace": {
          "description": "When true, this Trace object will be treated like an ordered stacktrace by the CLI and the Code Climate UI",
          "type": "boolean"
        }
      },
      "required": ["locations"],
      "type": "object"
    }
  },
  "description": "A JSON Schema describing the Code Climate Engine output format",
  "properties": {
    "categories": {
      "$id": "#/properties/categories",
      "description": "At least one category indicating the nature of the issue being reported",
      "examples": [["Complexity"]],
      "items": {
        "enum": [
          "Bug Risk",
          "Clarity",
          "Compatibility",
          "Complexity",
          "Duplication",
          "Performance",
          "Security",
          "Style"
        ],
        "type": "string"
      },
      "minItems": 1,
      "type": "array"
    },
    "check_name": {
      "$id": "#/properties/check_name",
      "description": "A unique name representing the static analysis check that emitted this issue",
      "examples": ["Bug Risk/Unused Variable"],
      "type": "string"
    },
    "content": { "$ref": "#/definitions/content" },
    "description": {
      "$id": "#/properties/description",
      "description": "A string explaining the issue that was detected",
      "examples": ["Unused local variable `foo`"],
      "type": "string"
    },
    "fingerprint": {
      "$id": "#/properties/fingerprint",
      "description": "A unique, deterministic identifier for the specific issue being reported to allow a user to exclude it from future analyses",
      "examples": ["abcd1234"],
      "type": "string"
    },
    "location": { "$ref": "#/definitions/location" },
    "other_locations": {
      "$id": "#/properties/other_locations",
      "description": "An optional array of Location objects",
      "items": { "$ref": "#/definitions/location" },
      "type": "array"
    },
    "remediation_points": {
      "$id": "#/properties/remediation_points",
      "description": "An integer indicating a rough estimate of how long it would take to resolve the reported issue",
      "examples": [50000],
      "type": "integer"
    },
    "severity": {
      "$id": "#/properties/severity",
      "description": "A string describing the potential impact of the issue found",
      "enum": ["info", "minor", "major", "critical", "blocker"],
      "examples": ["info"],
      "type": "string"
    },
    "trace": { "$ref": "#/definitions/trace" },
    "type": {
      "$id": "#/properties/type",
      "description": "Must always be 'issue'",
      "enum": ["issue"],
      "examples": ["issue"],
      "type": "string"
    }
  },
  "required": ["type", "check_name", "description", "categories", "location"],
  "title": "Result",
  "type": "object"
}
